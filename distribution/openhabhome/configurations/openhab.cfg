# This is the default configuration file, which comes with every openHAB distribution.
# You should do a copy of it with the name 'openhab.cfg' and configure your personal
# settings in there. This way you can be sure that they are not overwritten, if you
# update openHAB one day.


####################################################################################### 
#####                        General configurations                               #####
####################################################################################### 

# Configuration folders (must exist as a subdirectory of "configurations"; the value
# tells the number of seconds for the next scan of the directory for changes. A
# value of -1 deactivates the scan).
# A comma separated list can follow after the refresh value. This list defines a filter
# for valid file extensions for the models.
folder:items=10,items
folder:sitemaps=10,sitemap
folder:rules=10,rules
folder:scripts=10,script
folder:persistence=10,persist

# configures the security options. The following values are valid:
# ON = security is switched on generally
# OFF = security is switched off generally
# EXTERNAL = security is switched on for external requests 
#            (e.g. originating from the Internet) only
# (optional, defaults to 'OFF')
security:option=OFF

# the Netmask to define a range of internal IP-Addresses which doesn't require
# authorization (optional, defaults to '192.168.1.0/24')
#security:netmask=

# The name of the default persistence service to use
#PSQL is used for statistical rules

persistence:default=psql

# The refresh interval for the main configuration file. A value of '-1' 
# deactivates the scan (optional, defaults to '-1' hence scanning is deactivated)
#mainconfig:refresh=


####################################################################################### 
#####                       Action configurations                                 #####
####################################################################################### 

######################## Mail Action configuration ####################################
#
# The SMTP server hostname, e.g. "smtp.gmail.com"
mail:hostname=smtp.gmail.com

# the SMTP port to use (optional, defaults to 25 (resp. 587 for TLS))
mail:port=587

# the username and password if the SMTP server requires authentication
mail:username=
mail:password=

# The email address to use for sending mails
mail:from=

# set to "true", if TLS should be used for the connection
# (optional, defaults to false)
mail:tls=true

# set to "true", if POP before SMTP (another authentication mechanism)
# should be enabled. Username and Password are taken from the above
# configuration (optional, default to false)
#mail:popbeforesmtp=

############################# MaryTTS configuration ###################################
#
# the default voice used by the MaryTTS engine. Available voices are: bits1-hsmm 
# (german, female), bits3-hsmm (german, male), cmu-slt-hsmm (english, male) (optional,
# defaults to the systems' default voice or the first available voice)
marytts:voice=cmu-slt-hsmm


####################################################################################### 
#####                      Persistence configurations                             #####
####################################################################################### 

######################## Open.Sen.se Persistence Service ##############################
#
# the url of the Open.Sen.se public api (optional, defaults to 
# 'http://api.sen.se/events/?sense_key=') 
#sense:url=

# the Open.Sen.se API-Key for authentication (generated on the Open.Sen.se website)
#sense:apikey=

######################### Logging Persistence Service #################################
#
# the logback encoder pattern to use to write log entries
# see http://logback.qos.ch/manual/layouts.html#ClassicPatternLayout for all options
# the item name is available as the "logger" name, the state as the "msg"
logging:pattern=%date{ISO8601} - %-25logger: %msg%n

############################## Plugwise Binding #######################################
#
# "stick" is reserved plug wise id

# on mac with FTDIUSBSerialDriver_v2_2_18 driver
# plugwise:stick.port=/dev/tty.usbserial-A100dkpK
plugwise:stick.port=COM7

# "circleplus" is reserved plug wise id
plugwise:circleplus.mac=000D6F000098C0A7
plugwise:circle2.mac=000D6F00009929AA
plugwise:sense1.mac=000D6F00029C65A1
plugwise:scan1.mac=000D6F0002900714

#stick 000D6F000076B132                

############################### Systeminfo Binding ####################################
#
# Interval in milliseconds when to find new refresh candidates
# (optional, defaults to 1000)
#systeminfo:granularity=

# Data Storage Unit, where B=Bytes, K=kB, M=MB, T=TB (optional, defaults to M)
#systeminfo:units=

################################ Z-Wave  Binding ######################################
#
# The Z-Wave controller port. Valid values are e.g. 
# COM1 for Windows 
# /dev/ttyS0 or /dev/ttyUSB0 for Linux
# /dev/cu.SLAB_USBtoUART for Mac OS X

zwave:port = COM3

# Z-Wave binding refresh value (optional, defaults to 10000)
# zwave:refresh=
# Z-Wave binding refresh interval threshold (optional, defaults to every 6 times)
#zwave:refreshThreshold=2

zwave:healtime = 23

zwave:setSUC = true


############################### HTTP Binding ##########################################
#
# timeout in milliseconds for the http requests (optional, defaults to 5000)

http:plegmodule2.url=http://localhost:8080/api/plegma.xml?type=modules&moduleid=2
http:plegmodule3.url=http://localhost:8080/api/plegma.xml?type=modules&moduleid=3
http:plegmodule4.url=http://localhost:8080/api/plegma.xml?type=modules&moduleid=4
http:plegappliance1.url=http://localhost:8080/api/plegma.xml?type=appliances&applianceid=3
http:plegappliance2.url=http://localhost:8080/api/plegma.xml?type=appliances&applianceid=2
http:plegroom.url=http://localhost:8080/api/plegma.xml?type=rooms&roomid=1

http:janitza.url=http://192.168.2.102/pleg/api.html
http:janitza.updateInterval=60000
 
############################ SQL Persistence Service ##################################
#
# the JDBC driver class like 'com.mysql.jdbc.Driver' or 'org.postgresql.Driver'

psql:driverClass=com.mysql.jdbc.Driver

# the database url like 'jdbc:mysql://<host>:<port>/<user>'
# rackspace dedicated  #sql:url=jdbc:mysql://localhost:3306/plegmadb  

#rackspace 162.13.76.148
psql:url=jdbc:mysql://127.0.0.1:3306/nuc3?autoReconnect=true
#psql:url=jdbc:mysql://192.168.2.100:3306/plegma?autoReconnect=true

# the database user 
psql:user=plegma

# the database password
psql:password=plegma

################################# Sunny Web Box ######################################


#Espace_141_99,84kWp #Espace_209_99,84kWp
sunnywebbox:URL1=

#Espace_401_99,84kWp
sunnywebbox:URL2=

#Espace_336_99,84kWp
sunnywebbox:URL3=

#Espace_Ypati
sunnywebbox:URL4=

sunnywebbox:refresh=960000



############################ Nimbits Persistence Service ##################################
#
nimbits:url=http://plegmacloud.appspot.com
nimbits:ACCESS_KEY=



############################ ZWaveMe Binding ##################################
#
zwaveme:url=http://192.168.2.8:8083

zwaveme:hem.get=/ZWaveAPI/Run/devices[13].instances[0].commandClasses[50].Get()
zwaveme:hem.filter=devices.13.instances.0.commandClasses.50.data.


0-4 data array

"val": {
        "name": "val",
        "value": 407.046,
        "type": "float",
        "invalidateTime": 1411391649,
        "updateTime": 1411570849
      },


zwaveme:hem1.get=/ZWaveAPI/Run/devices[13].instances[1].commandClasses[50].Get()
zwaveme:hem1.filter=devices.13.instances.1.commandClasses.50.data. 

zwaveme:hem2.get=/ZWaveAPI/Run/devices[13].instances[2].commandClasses[50].Get()
zwaveme:hem2.filter=devices.13.instances.2.commandClasses.50.data.

zwaveme:hem3.get=/ZWaveAPI/Run/devices[13].instances[3].commandClasses[50].Get()
zwaveme:hem3.filter=devices.13.instances.3.commandClasses.50.data.

zwaveme:fibaro3.get=/ZWaveAPI/Run/devices[3].instances[3].commandClasses[50].Get()
zwaveme:fibaro3.filter=devices.3.instances.3.commandClasses.50.data.

zwaveme:4in1.get=/ZWaveAPI/Run/devices[4].instances[0].commandClasses[48].Get()
zwaveme:4in1.filter=devices.4.instances.0.commandClasses.48.data.


############################ Mongo Persistence Service ##################################
#

#mongodb:username=
#mongodb:password=

mongodb:url=127.0.0.1
mongodb:port=27017
mongodb:db=plegma


# Timeout, in milliseconds, to wait when "Selecting" IO channels ready for communication
#tcp:selecttimeout=1000



################################# TCP - UDP Binding ###################################
#
# all parameters can be applied to both the TCP and UDP binding unless 
# specified otherwise

# Port to listen for incoming connections
#tcp:port=25001

# Cron-like string to reconnect remote ends, e.g for unstable connection or remote ends
tcp:reconnectron='0 * * * * ?'

# Interval between reconnection attempts when recovering from a communication error, 
# in seconds
tcp:retryinterval=30

# Queue data whilst recovering from a connection problem (TCP only)
tcp:queue=false

# Maximum buffer size whilst reading incoming data
#tcp:buffersize=1024

# Share connections within the Item binding configurations
tcp:itemsharedconnections=true

# Share connections between Item binding configurations
tcp:bindingsharedconnections=true

# Share connections between inbound and outbound connections
#tcp:directionssharedconnections=false

# Allow masks in ip:port addressing, e.g. 192.168.0.1:* etc
#tcp:addressmask=true

# Pre-amble that will be put in front of data being sent
#tcp:preamble=''

# Post-amble that will be appended to data being sent
tcp:postamble='\r\n'

# Perform all write/read (send/receive) operations in a blocking mode, e.g. the binding
# will wait for a reply from the remote end after data has been sent
tcp:blocking=true

# timeout, in milliseconds, to wait for a reply when initiating a blocking write/read
#  operation
tcp:timeout=20000

# Update the status of Items using the response received from the remote end (if the
# remote end sends replies to commands)
tcp:updatewithresponse=true

# Timeout - or 'refresh interval', in milliseconds, of the worker thread
tcp:refreshinterval=2000

# Timeout, in milliseconds, to wait when "Selecting" IO channels ready for communication
tcp:selecttimeout=4000

# Used character set
#tcp:charset=ASCII




